from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth.decorators import login_required
from django.contrib import messages
from .models import Report
import os
from django.conf import settings
from django.http import FileResponse
import tempfile
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter
import logging

logger = logging.getLogger(__name__)

@login_required
def report_list(request):
    reports = Report.objects.filter(generated_by=request.user).order_by('-date_generated')
    logger.info(f"User: {request.user.email}, Reports count: {reports.count()}")
    logger.info(f"Reports: {[r.name for r in reports]}")
    return render(request, 'reports/list.html', {'reports': reports})

@login_required
def report_generate(request):
    # Create a temporary file to store the PDF
    with tempfile.NamedTemporaryFile(delete=False, suffix='.pdf') as temp_file:
        # Create the PDF
        c = canvas.Canvas(temp_file.name, pagesize=letter)
        c.drawString(100, 750, f"Report Generated by {request.user.email}")
        c.drawString(100, 700, "Construction Management System Report")
        # Add more report content here
        c.save()

        # Get the filename from the temporary file
        filename = f"Report_{request.user.email}_{os.path.basename(temp_file.name)}"
        
        # Create the report record
        from django.core.files import File
        with open(temp_file.name, 'rb') as f:
            report = Report.objects.create(
                name=filename,
                generated_by=request.user,
                file=File(f, name=filename)
            )

    messages.success(request, 'Report generated successfully')
    return redirect('reports:report_list')

@login_required
def report_view(request, report_id):
    report = get_object_or_404(Report, id=report_id, generated_by=request.user)
    try:
        return FileResponse(open(report.file.path, 'rb'), content_type='application/pdf')
    except FileNotFoundError:
        messages.error(request, 'Report file not found')
        return redirect('reports:report_list')

@login_required
def report_delete(request, report_id):
    report = get_object_or_404(Report, id=report_id, generated_by=request.user)
    
    # Delete the file if it exists
    if report.file and os.path.exists(report.file.path):
        os.remove(report.file.path)
    
    report.delete()
    messages.success(request, 'Report deleted successfully')
    return redirect('reports:report_list')
